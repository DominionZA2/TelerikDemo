@page "/"

<PageTitle>Telerik Blazor Demo App</PageTitle>

<h1>Cosoft Theme Demo</h1>

<ul>
    <li>Toggle theme button at top right will toggle between the theme exported from the Telerik themebuilder (Aura), and the default Telerik theme (Default). This helps to see how it should look , and how our theme implements it.</li>
</ul>

<h5>Notes</h5>
<ul>
    <li>Initially k- CSS classes were used for layout. It was discovered when toggling between Default and Aura in this demo that the layout changed completely. When I swapped out to the bootstrap equivalent, the layout remained consistent. This highlights a potential problem in the portal as we have made use of k- classes for layout. They seem to map 1-1 with bootstrap so it should be a straight forward fix. I suggest going forward we use Bootstrap 5+ CSS for layout, and Kendo classes for design.</li>
    <li>The controls are rendering in this sample app as they are displayed in the theme designer. We need to fix this up.</li>
    <li>For clarity going forward, I think we need to define "default, primary, secondary and tertiary" and use this everywhere. This will mainly apply to the various buttons. If we see a variable with the name primary in figma, we should expect to be able to apply the primary theme constant to the telerik control. Same applies for no variable, secondary and tertiary.</li>
    <li>In the theme designer, there is a way to hook it up to Figma. I think we should explore this as it could remove potential human error in the mapping process. For example: The tabcontrol looks great in Figma, not in the theme designer, exports as broken, and we override it in the Portal to make it display - okay. Maybe the integration to figma would mean what is designed is what we get... Will explore this more.</li>
    <li>The Roboto font applies by default here in the demo app. In the Portal we have a few overrides that were deemed necessary but it appears not, and are probably causing the font discrepancies that pop up. Remove any font customisation.</li>
    <li>Overrides done in the Portal to address theme file issues could - and mostly do - have side effects on the other styles in the system - exacerbating our problem.</li>
</ul>

<h5>Proposed approach</h5>
<ul>
    <li>Stop using k- classes for layout. Bootstrap 5+ will be perfect.</li>
    <li>Define Default, Primary, Secondary and Tertiary button styles, and use them everywhere. For the Portal, it becomes as simple as using a Telerik constant on the control if supported.</li>
    <li>Get the themebuilder up to date and showing the controls as they are in figma.</li>
    <li>Confirm via this demo app that the portal theme is working as intended.</li>
    <li>Apply theme to the Portal and remove all overrides. This includes the font overrides. Portal will more than likely require fixing where custom CSS was used to achieve a Figma look.</li>
    <li>Investigate the figma integration with the themebuilder. I think we should leave this until last as doing an import could vastly change our theme file as it stands.</li>
</ul>